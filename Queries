select name from students where marks>75 order by right(name, 3), ID asc;
select name from employee where salary > 2000 and months<10 order by employee_id asc;

SELECT CASE WHEN A + B <= C OR A + C <= B OR B + C <= A THEN 'Not A Triangle' WHEN A=B AND B=C THEN 'Equilateral' WHEN A=B OR A=C OR B=C THEN 'Isosceles' ELSE 'Scalene' END FROM TRIANGLES ;
things to notice SELECT CASE WHEN, THEN, END FROM 

SELECT CONCAT(NAME, '(', LEFT(OCCUPATION, 1), ')') AS formatted_name
FROM OCCUPATIONS
ORDER BY NAME;

SELECT CONCAT('There are a total of ', COUNT(OCCUPATION), ' ', LOWER(OCCUPATION), 's.') AS occupation_count
FROM OCCUPATIONS
GROUP BY OCCUPATION
ORDER BY COUNT(OCCUPATION);

select sum(city.population) from city inner join country on city.countrycode = country.code 
where country.continent = 'Asia';

select country.continent, floor(avg(city.population)) from country inner join city on city.countrycode=country.code group by country.continent;
here we used group by bcz we used aggregate func (AVG) in the query

select * from course
where course# in (select course# from section)

SELECT artist_name, SUM(streams) AS total_streams, RANK() OVER (ORDER BY SUM(streams) DESC) AS artist_rank
FROM 
    spotify_streams
GROUP BY 
    artist_name
ORDER BY 
    total_streams DESC;

1)AGGREGATE LISTENING DATA
SELECT 
    user_id,
    ROUND(SUM(listen_duration) / 60) AS total_listen_duration,
    COUNT(DISTINCT song_id) AS unique_song_count
FROM 
    listening_habits
GROUP BY 
    user_id;

2)TOP RANKED SONGS FROM PAST 20 YEARS
SELECT DISTINCT
    year,song_name
FROM
    billboard_top_100_year_end
WHERE
    year >= YEAR(CURRENT_DATE) - 20
    AND year_rank = 1;

3)SONGS RANKED BETWEEN 8 TO 10
select trackname, position from spotify_worldwide_daily_song_ranking
where position between 8 and 10
order by position asc;

4) Total number of streams for the top 100 ranked songs
select sum(streams) as total_no_of_streams from spotify_worldwide_daily_song_ranking
where position >= 100

5)average number of streams across all songs
select avg(streams) as avg_no_of_streams from spotify_worldwide_daily_song_ranking;

6)Find the top 10 ranked songs by position. Output the track name along with the corresponding position and sort records by the position in descending order and track name alphabetically
SELECT position,trackname
FROM  spotify_worldwide_daily_song_ranking
ORDER BY position DESC, trackname ASC
LIMIT 10;

7) LIST OF SONGS THAT STAYED ATLEAST TOP 1 IN 20 YEARS
SELECT DISTINCT year,song_name
FROM billboard_top_100_year_end
WHERE year >= YEAR(CURRENT_DATE) - 20 AND year_rank = 1;

8) Find artists with the highest number of top 10 ranked songs over the years
select artist , count(*) as number_of_top_10_rankings from spotify_worldwide_daily_song_ranking
where position <= 10
group by artist
